{
    "Version": "2012-10-17",
    "Statement": [
        {
            "Sid" : "AllowSageMakerWriterOperations",
            "Effect": "Allow",
            "Action": [
                "sagemaker:AddTags",
                "sagemaker:CreateApp",
                "sagemaker:CreateNotebookInstance",
                "sagemaker:CreateEndpoint",
                "sagemaker:CreateEndpointConfig",
                "sagemaker:CreateFlowDefinition",
                "sagemaker:CreateHyperParameterTuningJob",
                "sagemaker:CreateImage",
                "sagemaker:CreateImageVersion",
                "sagemaker:CreateModel",
                "sagemaker:CreateModelPackage",
                "sagemaker:CreateModelPackageGroup",
                "sagemaker:CreatePipeline",
                "sagemaker:CreatePresignedDomainUrl",
                "sagemaker:CreatePresignedNotebookInstanceUrl",
                "sagemaker:CreateProcessingJob",
                "sagemaker:CreateStudioLifecycleConfig",
                "sagemaker:CreateTrainingJob",
                "sagemaker:CreateTransformJob",
                "sagemaker:CreateContext",
                "sagemaker:CreateAction",
                "sagemaker:CreateArtifact",
                "sagemaker:AddAssociation",
                "sagemaker:CreateExperiment",
                "sagemaker:CreateTrial",
                "sagemaker:CreateTrialComponent",
                "sagemaker:AssociateTrialComponent",
                "sagemaker:DeleteApp",
                "sagemaker:DeleteEndpoint",
                "sagemaker:DeleteEndpointConfig",
                "sagemaker:DeleteFlowDefinition",
                "sagemaker:DeleteModel",
                "sagemaker:DeleteModelPackage",
                "sagemaker:DeleteModelPackageGroup",
                "sagemaker:DeleteNotebookInstance",
                "sagemaker:DeletePipeline",
                "sagemaker:DeleteTags",
                "sagemaker:DeleteAssociation",
                "sagemaker:DeleteTrial",
                "sagemaker:DeleteTrialComponent",
                "sagemaker:DeleteExperiment",
                "sagemaker:DeleteContext",
                "sagemaker:DeleteArtifact",
                "sagemaker:DeleteAction",
                "sagemaker:RetryPipelineExecution",
                "sagemaker:SendPipelineExecutionStepFailure",
                "sagemaker:SendPipelineExecutionStepSuccess",
                "sagemaker:StartNotebookInstance",
                "sagemaker:StartPipelineExecution",
                "sagemaker:StopHyperParameterTuningJob",
                "sagemaker:StopNotebookInstance",
                "sagemaker:StopPipelineExecution",
                "sagemaker:StopProcessingJob",
                "sagemaker:StopTrainingJob",
                "sagemaker:StopTransformJob",
                "sagemaker:UpdateEndpoint",
                "sagemaker:UpdateEndpointWeightsAndCapacities",
                "sagemaker:UpdateModelPackage",
                "sagemaker:UpdateNotebookInstance",
                "sagemaker:UpdatePipeline",
                "sagemaker:UpdatePipelineExecution",
                "sagemaker:InvokeEndpoint"
            ],
            "Resource": "*"
        },
        {
            "Sid" : "AllowSageMakerReaderOperations",
            "Effect": "Allow",
            "Action": [
                "sagemaker:Describe*",
                "sagemaker:List*",
                "sagemaker:Get*",
                "sagemaker:Search*"
            ],
            "Resource": "*"
        },
        {
            "Sid":"AllowECR",
            "Effect": "Allow",
            "Action": [
                "ecr:BatchCheckLayerAvailability",
                "ecr:BatchGetImage",
                "ecr:CreateRepository",
                "ecr:Describe*",
                "ecr:GetAuthorizationToken",
                "ecr:GetDownloadUrlForLayer",
                "ecr:StartImageScan"
            ],
            "Resource": "*"
        },
        {
            "Sid": "AllowAthena",
            "Effect": "Allow",
            "Action": [
                "athena:List*",
                "athena:Get*",
                "athena:StartQueryExecution",
                "athena:StopQueryExecution"
            ],
            "Resource": [
                "*"
            ]
        },
        {
            "Sid":"AllowIamKmsServiceCatalog",
            "Effect": "Allow",
            "Action": [
                "iam:ListRoles",
                "kms:DescribeKey",
                "kms:ListAliases",
                "lambda:ListFunctions",
                "secretsmanager:ListSecrets",
                "servicecatalog:Describe*",
                "servicecatalog:List*",
                "servicecatalog:ScanProvisionedProducts",
                "servicecatalog:SearchProducts",
                "servicecatalog:SearchProvisionedProducts",
                "servicecatalog:ProvisionProduct",
                "tag:GetResources"
            ],
            "Resource": "*"
        },
        {
            "Effect": "Allow",
            "Action": [
                "iam:PassRole"
            ],
            "Resource": "arn:aws:iam::*:role/*",
            "Condition": {
                "StringEquals": {
                    "iam:PassedToService": "sagemaker.amazonaws.com"
                }
            }
        },
        {
            "Effect": "Allow",
            "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue",
                "secretsmanager:CreateSecret"
            ],
            "Resource": [
                "arn:aws:secretsmanager:*:*:secret:AmazonSageMaker-*"
            ]
        },
        {
            "Effect": "Allow",
            "Action": [
                "secretsmanager:DescribeSecret",
                "secretsmanager:GetSecretValue"
            ],
            "Resource": "*",
            "Condition": {
                "StringEquals": {
                    "secretsmanager:ResourceTag/SageMaker": "true"
                }
            }
        },
        {
            "Sid":"AllowS3ObjectOperations",
            "Effect": "Allow",
            "Action": [
                "s3:GetObject",
                "s3:PutObject",
                "s3:DeleteObject",
                "s3:AbortMultipartUpload",
                "s3:GetBucketAcl",
                "s3:PutObjectAcl"
            ],
            "Resource": [
                "arn:aws:s3:::*SageMaker*",
                "arn:aws:s3:::*Sagemaker*",
                "arn:aws:s3:::*sagemaker*",
                "arn:aws:s3:::*aws-glue*",
                "arn:aws:s3:::*security_lake*"
            ]
        },
        {
            "Sid":"AllowS3BucketOperations",
            "Effect": "Allow",
            "Action": [
                "s3:GetBucketLocation",
                "s3:ListBucket",
                "s3:ListAllMyBuckets",
                "s3:GetBucketCors",
                "s3:PutBucketCors"
            ],
            "Resource": "*"
        },
        {
            "Sid":"AllowGlueReadOperations",
            "Effect": "Allow",
            "Action": [
                "glue:Get*",
                "glue:List*",
                "glue:Search*"
            ],
            "Resource": "*"
        },
        {
            "Sid":"AllowLakeFormationReadOperations",
            "Effect": "Allow",
            "Action": [
                "lakeformation:Get*",
                "lakeformation:List*",
                "lakeformation:Search*",
                "lakeformation:Start*",
                "lakeformation:Stop*",
                "lakeformation:Cancel*"
            ],
            "Resource": "*"
        },
        {
            "Sid":"AllowCloudWatchReadOperations",
            "Effect": "Allow",
            "Action": [
                "logs:Get*",
                "logs:List*",
                "logs:Search*",
                "logs:Describe*"
            ],
            "Resource": "*"
        }
    ]
}